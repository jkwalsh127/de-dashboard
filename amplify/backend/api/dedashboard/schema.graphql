type TotalWithdrawal @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: AWSDate
  amount: Int
  userID: ID! @index(name: "byUser")
}

type TotalProfit @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: AWSDate
  profit: Float
  userID: ID! @index(name: "byUser")
}

type WeeklyWithdrawal @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: AWSDate
  amount: Int
  userID: ID! @index(name: "byUser")
}

type WeeklyProfit @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: AWSDate
  profit: Float
  userID: ID! @index(name: "byUser")
}

type WeeklyBalance @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: AWSDate
  balance: Int
  userID: ID! @index(name: "byUser")
}

type Withdrawal @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: AWSDate
  amount: Int
  userID: ID! @index(name: "byUser")
}

type User @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  name: String!
  investment: Int
  balance: Int
  Withdrawals: [Withdrawal] @hasMany(indexName: "byUser", fields: ["id"])
  profit: Float
  WeeklyBalances: [WeeklyBalance] @hasMany(indexName: "byUser", fields: ["id"])
  WeeklyProfits: [WeeklyProfit] @hasMany(indexName: "byUser", fields: ["id"])
  WeeklyWithdrawals: [WeeklyWithdrawal] @hasMany(indexName: "byUser", fields: ["id"])
  TotalProfits: [TotalProfit] @hasMany(indexName: "byUser", fields: ["id"])
  TotalWithdrawals: [TotalWithdrawal] @hasMany(indexName: "byUser", fields: ["id"])
  joinDate: AWSDate
}
 